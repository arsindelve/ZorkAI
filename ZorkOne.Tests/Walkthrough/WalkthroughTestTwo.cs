using NUnit.Framework;

namespace ZorkOne.Tests.Walkthrough;

[TestFixture]
public sealed class WalkthroughTestTwo : WalkthroughTestBase
{
    // https://www.allthingsjacq.com/intfic_clubfloyd_20160401.html
    [Test]
    [TestCase("open mailbox", null, "Opening the small mailbox reveals a leaflet.")]
    [TestCase("take leaflet", null, "Taken")]
    [TestCase("read it", null, "ZORK is a game of adventure, danger, and low cunning. In it you will explore")]
    [TestCase("inventory", null, "You are carrying", "A leaflet")]
    [TestCase("examine door", null, "The door is closed.")]
    [TestCase("open door", null, "The door cannot be opened.")]
    [TestCase("examine house", null, "colonial", "wealthy")]
    [TestCase("E", null, "The door is boarded and you can't remove the boards")]
    [TestCase("N", null, "You are facing the north side of a white house")]
    [TestCase("S", null, "The windows are all boarded")]
    [TestCase("SE", null, "Behind House")]
    [TestCase("S", null, "South of House")]
    [TestCase("S", null, "Forest", "dimly lit")]
    [TestCase("N", null, "Clearing", "well marked forest path")]
    [TestCase("E", null, "Canyon View", "Aragain")]
    [TestCase("E", null, "Rocky Ledge", "Above you is more cliff")]
    [TestCase("Down", null, "Canyon Bottom", "You are beneath the walls of the river")]
    [TestCase("N", null, "End of Rainbow", "sunlight shines")]
    [TestCase("SW", null, "Canyon Bottom", "You are beneath the walls of the river")]
    [TestCase("Up", null, "Rocky Ledge", "Above you is more cliff")]
    [TestCase("Up", null, "Canyon View", "Aragain")]
    [TestCase("NW", null, "Clearing", "well marked forest path")]
    [TestCase("S", null, "Forest", "dimly lit")]
    [TestCase("S", null, "Storm-tossed")]
    [TestCase("N", null, "Clearing", "well marked forest path")]
    [TestCase("E", null, "Canyon View", "Aragain")]
    [TestCase("W", null, "Forest", "dimly lit")]
    [TestCase("W", null, "Forest", "appears to be sunlight")]
    [TestCase("E", null, "Forest Path", "low branches")]
    [TestCase("S", null, "North of House")]
    [TestCase("N", null, "Forest Path", "low branches")]
    [TestCase("N", null, "Clearing", "On the ground is a pile of leaves")]
    [TestCase("take leaves", null, "a grating is revealed", "Taken")]
    [TestCase("examine grating", null, "grating is closed")]
    [TestCase("open grating", null, "grating is locked")]
    [TestCase("N", null, "The forest becomes impenetrable to the north")]
    [TestCase("S", null, "Forest Path", "low branches")]
    [TestCase("examine tree", null, "There's nothing special about the tree")]
    [TestCase("examine branches", null, "There's nothing special about the tree")]
    [TestCase("Up", null, "Up A Tree", "you is above your reach")]
    [TestCase("take egg", null, "Taken")]
    [TestCase("examine egg", null, "The jewel-encrusted egg is closed")]
    [TestCase("open egg", null, "You have neither the tools nor the expertise")]
    [TestCase("Down", null, "Forest Path", "low branches")]
    [TestCase("inventory", null, "You are carrying", "A leaflet", "egg", "leaves")]
    [TestCase("count leaves", null, "There are 69,105 leaves here")]
    [TestCase("S", null, "North of House")]
    [TestCase("SE", null, "Behind House")]
    [TestCase("examine window", null, "The window is slightly ajar, but not enough to allow entry")]
    [TestCase("open window", null, "With great effort, you open the window far enough to allow entry.")]
    [TestCase("W", null, "Kitchen")]
    [TestCase("take all", null, "sack: Taken", "bottle: Taken")]
    [TestCase("Up", null, "pitch black")]
    [TestCase("Down", null, "Kitchen")]
    // TODO: > Examine table. "The kitchen table is empty."
    [TestCase("W", null, "Living Room")]
    [TestCase("take lantern", null, "Taken")]
    [TestCase("examine rug", null, "nothing special about the carpet")]
    [TestCase("take rug", null, "but in trying to take it you have noticed an")]
    [TestCase("move rug", null, "With a great effort")]
    [TestCase("look", null, "closed trap door")]
    [TestCase("W", null, "nailed shut")]
    [TestCase("examine lettering", null, "left blank")]
    [TestCase("examine case", null, "case is empty")]
    [TestCase("put egg in case", null, "closed")]
    [TestCase("open case", null, "Opened")]
    [TestCase("put egg in case", null, "Done")]
    [TestCase("close case", null, "Closed")]
    [TestCase("examine case", null, "consists of", "egg")]
    [TestCase("open case", null, "Opened")]
    [TestCase("take sword", null, "Taken")]
    [TestCase("put sword in case", null, "Done")]
    [TestCase("take sword", null, "Taken")]
    [TestCase("inventory", null, "sword", "glass bottle contains")]
    [TestCase("examine bottle", null, "A quantity of water")]
    [TestCase("examine sack", null, "brown sack is closed")]
    [TestCase("open sack", null, "reveals a lunch", "clove of garlic")]
    [TestCase("examine lunch", null, "nothing special about the lunch")]
    [TestCase("smell garlic", null, "It smells like a clove of garlic")]
    // TODO: Put all in sack
    [TestCase("put leaflet in sack", null, "Done")]
    [TestCase("drop leaves", null, "Dropped")]
    [TestCase("drop leaflet", null, "Dropped")]
    [TestCase("inventory", null, "sword", "bottle", "water", "lunch", "garlic", "lantern")]
    [TestCase("look", null, "closed trap door", "egg", "pile of leaves")]
    [TestCase("E", null, "Kitchen")]
    [TestCase("turn on lantern", null, "now on")]
    [TestCase("Up", null, "Attic","rope", "knife")]
    [TestCase("get all", null, "rope: Taken", "knife: Taken")]
    // TODO: > Examine table. "The table is empty."
    [TestCase("Down", null, "Kitchen")]
    [TestCase("Down", null, "Santa")]
    [TestCase("W", null, "Living Room")]
    [TestCase("Down", null, "closed")]
    [TestCase("open trap door", null, "The door reluctantly opens to reveal a rickety staircase")]
    [TestCase("Down", null, "faint blue glow")]
    [TestCase("N", "KillTroll", "Bloodstains")]
    [TestCase("E", null, "East-West")]
    [TestCase("E", null, "Round Room")]
    [TestCase("N", null, "North-South")]
    [TestCase("N", null, "Chasm")]
    [TestCase("S", null, "North-South")]
    [TestCase("S", null, "Round Room")]
    [TestCase("W", null, "East-West")]
    [TestCase("E", null, "Round Room")]
    [TestCase("E", null, "Loud Room")]
    [TestCase("take bar", null, "bar bar ...")]
    [TestCase("Up", null, "Deep Canyon")]
    [TestCase("E", null, "Dam")]
    [TestCase("examine control panel", null, "nothing special")]
    [TestCase("take bolt", null, "It is an integral part of the control panel")]
    [TestCase("take bubble", null, "It is an integral part of the control panel")]
    [TestCase("examine bubble", null, "nothing special")]
    [TestCase("look", null, "abandoned dam")]
    [TestCase("N", null, "Dam Lobby")]
    [TestCase("N", null, "Maintenance Room")]
    [TestCase("S", null, "Dam Lobby")]
    [TestCase("take matchbook", null, "Taken")]
    [TestCase("examine matchbook", null, "except for what")]
    [TestCase("S", null, "Dam")]
    [TestCase("Down", null, "Dam Base")]
    [TestCase("take pile", null, "Your load is too heavy")]
    [TestCase("Up", null, "Dam")]
    [TestCase("W", null, "Reservoir South")]
    [TestCase("SW", null, "Chasm")]
    [TestCase("S", null, "North-South")]
    [TestCase("S", null, "Round Room")]
    [TestCase("S", null, "Narrow Passage")]
    [TestCase("N", null, "Round Room")]
    [TestCase("S", null, "Narrow Passage")]
    [TestCase("S", null, "Mirror Room")]
    [TestCase("examine mirror", null, "ugly person")]
    [TestCase("W", null, "Winding Passage")]
    [TestCase("N", null, "Mirror Room")]
    [TestCase("W", null, "Winding Passage")]
    [TestCase("E", null, "Cave")]
    [TestCase("W", null, "Winding Passage")]
    [TestCase("N", null, "Mirror Room")]
    [TestCase("W", null, "Winding Passage")]
    [TestCase("E", null, "Cave")]
    [TestCase("Down", null, "Hades")]
    [TestCase("examine bodies", null, "nothing special about")]
    [TestCase("examine spirits", null, "unable to interact")]
    [TestCase("examine gate", null, "The gate is protected by an invisible force")]
    [TestCase("Up", null, "Cave")]
    [TestCase("N", null, "Mirror Room")]
    [TestCase("E", null, "Cave")]
    [TestCase("W", null, "Winding Passage")]
    [TestCase("N", null, "Mirror Room")]
    [TestCase("take mirror", null, "many times your size. Give up")]
    [TestCase("N", null, "Narrow Passage")]
    [TestCase("N", null, "Round Room")]
    [TestCase("N", null, "North-South Passage")]
    [TestCase("N", null, "Chasm")]
    [TestCase("S", null, "North-South Passage")]
    [TestCase("S", null, "Round Room")]
    [TestCase("SE", null, "Engravings Cave")]
    [TestCase("examine engravings", null, "peoples of Zork")]
    [TestCase("E", null, "Dome Room")]
    [TestCase("Down", null, "many bones")]
    [TestCase("W", null, "Engravings Cave")]
    [TestCase("NW", null, "Round Room")]
    [TestCase("W", null, "East-West Passage")]
    [TestCase("Down", null, "Chasm")]
    [TestCase("Up", null, "East-West Passage")]
    [TestCase("E", null, "Round Room")]
    [TestCase("W", null, "East-West Passage")]
    [TestCase("W", null, "Troll Room")]
    [TestCase("S", null, "Cellar")]
    [TestCase("S", null, "East of Chasm")]
    [TestCase("E", null, "Gallery")]
    [TestCase("take painting", null, "too heavy")]
    [TestCase("examine painting", null, "nothing special")]
    [TestCase("drop knife", null, "Dropped")]
    [TestCase("take painting", null, "Taken")]
    [TestCase("N", null, "Studio")]
    [TestCase("examine paper", null, "ZORK I")]
    [TestCase("Up", null, "with what you're carrying")]
    [TestCase("drop all", null, "sword: Dropped")]
    [TestCase("take lantern", null, "Taken")]
    [TestCase("Up", null, "Kitchen")]
    [TestCase("W", null, "Living Room")]
    [TestCase("Down", null, "is closed")]
    [TestCase("open trap door", null, "opens to reveal")]
    [TestCase("Down", null, "Cellar")]
    [TestCase("W", null, "impossible")]
    [TestCase("S", null, "East of Chasm")]
    [TestCase("E", null, "Gallery")]
    
    public async Task Walkthrough(string input, string? setup, params string[] expectedResponses)
    {
        if (!string.IsNullOrWhiteSpace(setup)) 
            InvokeGodMode(setup);

        await Do(input, expectedResponses);
    }
}